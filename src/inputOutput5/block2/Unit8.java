package inputOutput5.block2;

import java.io.IOException;
import java.io.InputStream;

/*
Напишите метод, читающий входной поток и вычисляющий контрольную сумму прочитанных данных.

Контрольная сумма данных вычисляется по следующему алгоритму:

Контрольная сумма представляет собой число типа int. Контрольная сумма пустого набора данных равна нулю.
Контрольная сумма непустого набора данных вычисляется по следующей рекуррентной формуле: Cn+1=rotateLeft(Cn) xor bn+1 , где Cn — контрольная сумма первых n байт данных, rotateLeft — циклический сдвиг бит числа на один бит влево (чтобы не изобретать велосипед, используйте Integer.rotateLeft), bn — n-ный байт данных.
Поскольку метод не открывал данный InputStream, то и закрывать его он не должен. Выброшенное из методов InputStream исключение должно выбрасываться из метода.

Пример
На вход подан InputStream, последовательно возвращающий три байта: 0x33 0x45 0x01. В качестве контрольной суммы должно быть возвращено число 71.
 */
public class Unit8 {
    public static int checkSumOfStream(InputStream inputStream) throws IOException {
        int C = 0;
        int b = 0 ;
        for (int i = 0; i < 2; i ++) {
            i = 0;
            b = inputStream.read();
            if (b == - 1){
                i = 2;
            } else {
                C = Integer.rotateLeft(C,1) ^ b;
            }
        }
        return C;
    }
}
